--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=0;local v86;while true do if (v85==0) then v86=v2(v0(v30,16));if v19 then local v126=v5(v86,v19);v19=nil;return v126;else return v86;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v87=0;local v88;while true do if (v87==((877 -(282 + 595)) -0)) then v88=(v31/((5 -3)^(v32-(1 -(1637 -(1523 + 114))))))%((4 -2)^(((v33-(620 -(499 + 56 + 64))) -(v32-1)) + (932 -(857 + (105 -31))))) ;return v88-(v88%(569 -(367 + 201))) ;end end else local v89=2^(v32-(928 -(214 + 713))) ;return (((v31%(v89 + v89))>=v89) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=1065 -(68 + 997) ;local v35;while true do if (v34==(4 -3)) then return v35;end if (v34==(1270 -(226 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 + 0 ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + 2 ;return (v37 * (610 -354)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (354 -(87 + 263)) ;return (v41 * (31011612 -(10468718 + 3765678))) + (v40 * (120312 -54776)) + (v39 * ((2495 -1867) -(1324 -(802 + 150)))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=2 -1 ;local v45=(v20(v43,1,36 -16 ) * ((2 + 0)^(1029 -(915 + 82)))) + v42 ;local v46=v20(v43,21,87 -(494 -(145 + 293)) );local v47=((v20(v43,19 + 13 )==((3 -2) -0)) and  -(1188 -(1069 + 118))) or 1 ;if (v46==((430 -(44 + 386)) -0)) then if (v45==(0 -0)) then return v47 * (0 + (1486 -(998 + 488))) ;else v46=1 -0 ;v44=0;end elseif (v46==(872 + 1159 + 16)) then return ((v45==(791 -(368 + 423))) and (v47 * ((1 + 0)/((772 -(201 + 571)) -0)))) or (v47 * NaN) ;end return v8(v47,v46-((1841 -800) -(10 + 8)) ) * (v44 + (v45/((7 -5)^(494 -(416 + 26))))) ;end local function v25(v48) local v49=1138 -(116 + 1022) ;local v50;local v51;while true do if (v49==(4 -(14 -11))) then v50=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;v49=7 -5 ;end if (v49==(10 -7)) then return v6(v51);end if (v49==(859 -(814 + 45))) then v50=nil;if  not v48 then local v123=0 + 0 ;while true do if (v123==((0 -0) -0)) then v48=v23();if (v48==((0 -0) + 0)) then return "";end break;end end end v49=1 + (1747 -(760 + 987)) ;end if (v49==(887 -(261 + 624))) then v51={};for v117=1 -(1423 -(630 + 793)) , #v50 do v51[v117]=v2(v1(v3(v50,v117,v117)));end v49=1083 -(1020 + 60) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v90,v91,v92,v93,v94,v95,v96,v97) local v90=(function() return 836 -(660 + 176) ;end)();local v91=(function() return;end)();local v92=(function() return;end)();while true do if ( #"!"==v90) then if (v91== #"|") then v92=(function() return v93()~=(0 + 0) ;end)();elseif (v91==(204 -(14 + 188))) then v92=(function() return v94();end)();elseif (v91~= #"-19") then else v92=(function() return v95();end)();end v96[v97]=(function() return v92;end)();break;end if (v90~=0) then else local v125=(function() return 0 + 0 ;end)();while true do if (v125~=0) then else v91=(function() return v93();end)();v92=(function() return nil;end)();v125=(function() return 1;end)();end if (v125~=1) then else v90=(function() return  #":";end)();break;end end end end return v90,v91,v92,v93,v94,v95,v96,v97;end;end)();local v53=(function() return function(v98,v99,v100,v101,v102,v103,v104,v105,v106) local v107=(function() return 0 -0 ;end)();local v98=(function() return;end)();local v99=(function() return;end)();while true do local v116=(function() return 675 -(534 + 141) ;end)();while true do if (v116==0) then if (v107==(1 + 0)) then local v127=(function() return 0 + 0 ;end)();while true do if (v127==0) then local v129=(function() return 0 + 0 ;end)();while true do if (v129==(0 + 0)) then while true do if (v98~=0) then else v99=(function() return v100();end)();if (v101(v99, #" ", #"|")==(0 -0)) then local v347=(function() return 0;end)();local v348=(function() return;end)();local v349=(function() return;end)();local v350=(function() return;end)();while true do if (v347==(1639 -(1373 + 263))) then if (v101(v349, #"19(", #"19(")~= #",") then else v350[ #"http"]=(function() return v104[v350[ #"0313"]];end)();end v105[v106]=(function() return v350;end)();break;end if (v347==(2 -0)) then if (v101(v349, #"!", #":")== #"<") then v350[5 -3 ]=(function() return v104[v350[2 -0 ]];end)();end if (v101(v349,2,2)== #":") then v350[ #"19("]=(function() return v104[v350[ #"91("]];end)();end v347=(function() return 2 + 1 ;end)();end if (v347==(1 + 0)) then local v377=(function() return 0;end)();while true do if (v377~=0) then else v350=(function() return {v102(),v102(),nil,nil};end)();if (v348==0) then local v393=(function() return 0 -0 ;end)();local v394=(function() return;end)();while true do if (v393==(0 + 0)) then v394=(function() return 0;end)();while true do if (v394==(0 -0)) then v350[ #"xxx"]=(function() return v102();end)();v350[ #"asd1"]=(function() return v102();end)();break;end end break;end end elseif (v348== #"}") then v350[ #"nil"]=(function() return v103();end)();elseif (v348==(7 -5)) then v350[ #"91("]=(function() return v103() -((343 -(218 + 123))^(1597 -(1535 + 46))) ;end)();elseif (v348== #"xnx") then local v402=(function() return 0;end)();local v403=(function() return;end)();while true do if (v402~=(867 -(550 + 317))) then else v403=(function() return 0 -0 ;end)();while true do if (v403~=(0 -0)) then else v350[ #"-19"]=(function() return v103() -((1 + 1)^(576 -(306 + 254))) ;end)();v350[ #"?id="]=(function() return v102();end)();break;end end break;end end end v377=(function() return 2 -1 ;end)();end if (v377==1) then v347=(function() return 3 -1 ;end)();break;end end end if (v347==(1467 -(899 + 568))) then local v378=(function() return 0 + 0 ;end)();while true do if (v378==(2 -1)) then v347=(function() return 286 -(134 + 151) ;end)();break;end if (v378==(1665 -(970 + 695))) then v348=(function() return v101(v99,3 -1 , #"xxx");end)();v349=(function() return v101(v99, #"asd1",1996 -(582 + 1408) );end)();v378=(function() return 3 -2 ;end)();end end end end end break;end end return v98,v99,v100,v101,v102,v103,v104,v105,v106;end end end end end if (v107~=(0 -0)) then else v98=(function() return 0;end)();v99=(function() return nil;end)();v107=(function() return 1;end)();end break;end end end end;end)();local v54=(function() return function(v108,v109,v110) local v111=(function() return 572 -(426 + 146) ;end)();local v112=(function() return;end)();while true do if (v111==(0 + 0)) then v112=(function() return 1456 -(282 + 1174) ;end)();while true do if (v112==0) then local v128=(function() return 0 -0 ;end)();while true do if ((1824 -(1195 + 629))~=v128) then else v108[v109-#">" ]=(function() return v110();end)();return v108,v109,v110;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #"[",v59 do FlatIdent_1076E,Type,Cons,v21,v24,v25,v60,v68=(function() return v52(FlatIdent_1076E,Type,Cons,v21,v24,v25,v60,v68);end)();end v58[ #"asd"]=(function() return v21();end)();for v69= #"]",v23() do FlatIdent_A36C,Descriptor,v21,v20,v22,v23,v60,v55,v69=(function() return v53(FlatIdent_A36C,Descriptor,v21,v20,v22,v23,v60,v55,v69);end)();end for v70= #"~",v23() do v56,v70,v28=(function() return v54(v56,v70,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1025 -(706 + 318) ];local v66=v62[1253 -(721 + 530) ];local v67=v62[1274 -(945 + 326) ];return function(...) local v71=v65;local v72=v66;local v73=v67;local v74=v27;local v75=2 -1 ;local v76= -((3 -2) + 0 + 0);local v77={};local v78={...};local v79=v12("#",...) -(1 + 0 + 0) ;local v80={};local v81={};for v113=1500 -(1162 + 246 + 92) ,v79 do if ((v113>=v73) or (2131==1383)) then v77[v113-v73 ]=v78[v113 + (1087 -(461 + 625)) ];else v81[v113]=v78[v113 + (1289 -(993 + 295)) ];end end local v82=(v79-v73) + 1 + 0 ;local v83;local v84;while true do v83=v71[v75];v84=v83[1172 -(418 + 753) ];if (v84<=(15 + 22)) then if (v84<=(2 + 16)) then if (v84<=8) then if (v84<=(1 + 2)) then if (v84<=(1 + 0)) then if ((v84>(529 -(406 + 123))) or (1876>=2541)) then do return v81[v83[1771 -(1749 + 15 + 5) ]];end else local v131=v83[1 + 1 ];local v132,v133=v74(v81[v131](v81[v131 + (1323 -(584 + 665 + 73)) ]));v76=(v133 + v131) -1 ;local v134=0;for v209=v131,v76 do local v210=0 + 0 ;while true do if (v210==(1145 -(466 + 679))) then v134=v134 + (2 -1) ;v81[v209]=v132[v134];break;end end end end elseif (v84>(5 -3)) then if (v83[1902 -((1539 -(797 + 636)) + 1794) ]==v81[v83[2 + 2 ]]) then v75=v75 + 1 + 0 ;else v75=v83[8 -5 ];end else v63[v83[7 -4 ]]=v81[v83[116 -(4 + 110) ]];end elseif (v84<=(589 -(57 + 527))) then if (v84>(1431 -((199 -158) + 1386))) then local v137=0;local v138;while true do if ((1782<=3772) and (v137==(103 -(17 + (1705 -(1427 + 192)))))) then v138=v83[2 + 0 ];v81[v138]=v81[v138]();break;end end elseif (v81[v83[2]]<v81[v83[4]]) then v75=v75 + (1 -0) ;else v75=v83[8 -5 ];end elseif (v84<=(172 -(122 + 44))) then v81[v83[2 -(0 + 0) ]]=v64[v83[9 -(13 -7) ]];elseif (v84>(6 + 1)) then v81[v83[1 + 1 ]][v83[5 -2 ]]=v83[69 -(30 + 35) ];else v81[v83[2 + 0 ]]=v83[1260 -(938 + 105 + 214) ];end elseif (v84<=(48 -35)) then if (v84<=(1222 -(323 + 889))) then if (v84>(23 -14)) then local v141=0 + 0 ;local v142;while true do if (v141==0) then v142=v83[582 -(361 + 219) ];v81[v142](v13(v81,v142 + 1 ,v83[3]));break;end end elseif (v81[v83[(648 -(192 + 134)) -(53 + 267) ]]==v81[v83[1 + 3 ]]) then v75=v75 + (414 -(15 + 398)) ;else v75=v83[985 -(18 + (2240 -(316 + 960))) ];end elseif ((v84<=(41 -30)) or (4700<813)) then v81[v83[2 + 0 ]]= not v81[v83[2 + 1 + 0 ]];elseif (v84>12) then v81[v83[852 -(20 + 830) ]]();else local v238=v83[2 + 0 ];local v239=v83[130 -(116 + 10) ];local v240=v238 + 1 + 1 ;local v241={v81[v238](v81[v238 + (1 -0) ],v81[v240])};for v294=1 + 0 ,v239 do v81[v240 + v294 ]=v241[v294];end local v242=v241[1 + 0 ];if v242 then local v330=0 + 0 ;while true do if (v330==((0 + 0) -0)) then v81[v240]=v242;v75=v83[3];break;end end else v75=v75 + (2 -1) ;end end elseif ((3199<4050) and (v84<=(1566 -(1126 + 425)))) then if ((v84==((388 + 31) -(118 + 287))) or (4951<4430)) then if v81[v83[(26 -19) -5 ]] then v75=v75 + (1122 -(118 + 1003)) ;else v75=v83[8 -5 ];end elseif (v81[v83[379 -(142 + 235) ]]~=v81[v83[(569 -(83 + 468)) -14 ]]) then v75=v75 + (1807 -(1202 + 604)) + 0 ;else v75=v83[980 -(553 + 424) ];end elseif ((96==96) and (v84<=(29 -(60 -47)))) then local v144=0 + 0 ;local v145;local v146;local v147;while true do if ((v144==(1 + 0)) or (2739>4008)) then v147=0 -0 ;for v331=v145,v83[3 + 1 ] do v147=v147 + 1 + 0 ;v81[v331]=v146[v147];end break;end if (v144==(0 + 0)) then v145=v83[(10 -6) -2 ];v146={v81[v145](v13(v81,v145 + (2 -1) ,v76))};v144=2 -1 ;end end elseif (v84==(5 + 12)) then v81[v83[9 -7 ]]={};else local v246=v83[(729 + 26) -(209 + 30 + 514) ];local v247=v83[2 + 2 ];local v248=v246 + 1 + 1 ;local v249={v81[v246](v81[v246 + 1 + 0 ],v81[v248])};for v298=1,v247 do v81[v248 + v298 ]=v249[v298];end local v250=v249[1];if v250 then local v334=0;while true do if (v334==(0 + 0)) then v81[v248]=v250;v75=v83[6 -3 ];break;end end else v75=v75 + 1 ;end end elseif (v84<=27) then if ((v84<=22) or (23==1134)) then if ((v84<=(1222 -(373 + 829))) or (2693>=4111)) then if ((v84==(750 -(476 + 142 + 113))) or (4316<=2146)) then local v148=v83[1132 -(65 + 304 + 761) ];v81[v148](v13(v81,v148 + 1 ,v83[2 + 1 ]));else local v149=v83[(9 -4) -2 ];local v150=v81[v149];for v211=v149 + (1 -0) ,v83[242 -(64 + 174) ] do v150=v150   .. v81[v211] ;end v81[v83[1 + 1 ]]=v150;end elseif ((v84>(30 -9)) or (3546<=2809)) then local v152=v83[338 -(144 + 192) ];v81[v152]=v81[v152](v81[v152 + (217 -(42 + 174)) ]);else local v154=v83[2 + 0 ];local v155,v156=v74(v81[v154](v13(v81,v154 + 1 + 0 ,v83[2 + 1 ])));v76=(v156 + v154) -(1505 -(363 + 1141)) ;local v157=0;for v212=v154,v76 do v157=v157 + 1 ;v81[v212]=v155[v157];end end elseif (v84<=24) then if ((4904>2166) and (v84>(1603 -(1183 + 397)))) then v81[v83[5 -3 ]]=v81[v83[3]] -v81[v83[3 + (1912 -(340 + 1571)) ]] ;elseif ((109>=90) and  not v81[v83[2]]) then v75=v75 + 1 + 0 ;else v75=v83[1978 -(1913 + 62) ];end elseif (v84<=(16 + 9)) then if  not v81[v83[2]] then v75=v75 + 1 ;else v75=v83[7 -4 ];end elseif (v84>(1959 -(565 + 540 + 828))) then v81[v83[7 -5 ]]=v63[v83[3]];else v63[v83[1664 -(1477 + 184) ]]=v81[v83[1774 -(1733 + 39) ]];end elseif ((4978>2905) and (v84<=(43 -11))) then if (v84<=29) then if (v84==(27 + 1)) then if (v81[v83[858 -(564 + 292) ]]<v81[v83[6 -2 ]]) then v75=v75 + (2 -1) ;else v75=v83[307 -(244 + 60) ];end else v75=v83[3];end elseif (v84<=(82 -52)) then v81[v83[2 + 0 ]]=v63[v83[3]];elseif ((v84>31) or (3026<=2280)) then local v258=476 -(41 + 435) ;local v259;local v260;while true do if (v258==0) then v259=v83[1003 -((1972 -(125 + 909)) + 63) ];v260=v81[v83[3 + 0 ]];v258=1126 -(936 + 189) ;end if (v258==((1949 -(1096 + 852)) + 0)) then v81[v259 + (1614 -(1565 + 22 + 26)) ]=v260;v81[v259]=v260[v83[3 + 1 ]];break;end end else local v261=v83[2];v81[v261]=v81[v261]();end elseif ((v84<=(48 -14)) or (1653<=1108)) then if (v84>(1171 -(782 + 356))) then do return;end else v81[v83[269 -(176 + 91) ]]=v81[v83[3]][v83[4]];end elseif (v84<=(91 -56)) then v81[v83[(2 + 0) -0 ]]=v81[v83[3]] -v81[v83[4]] ;elseif ((2909>2609) and (v84>((1640 -(409 + 103)) -(975 + 117)))) then do return;end else for v301=v83[(2113 -(46 + 190)) -(157 + 1718) ],v83[3 + 0 ] do v81[v301]=nil;end end elseif (v84<=(198 -142)) then if (v84<=(157 -111)) then if (v84<=(1059 -(697 + 321))) then if (v84<=(105 -66)) then if (v84>(80 -42)) then if (v81[v83[4 -2 ]]==v83[2 + 2 ]) then v75=v75 + 1 ;else v75=v83[5 -2 ];end else local v165=(95 -(51 + 44)) -0 ;local v166;local v167;local v168;local v169;while true do if (v165==2) then for v335=v166,v76 do local v336=(347 + 880) -(322 + 905) ;while true do if (v336==(611 -(602 + 9))) then v169=v169 + (1190 -(449 + 740)) ;v81[v335]=v167[v169];break;end end end break;end if ((1318 -(1114 + 203))==v165) then v76=(v168 + v166) -1 ;v169=872 -(826 + 46) ;v165=(1675 -(228 + 498)) -(245 + 702) ;end if ((757>194) and (v165==(0 -0))) then v166=v83[1 + 1 + 0 ];v167,v168=v74(v81[v166](v81[v166 + 1 ]));v165=(1050 + 849) -(260 + 1638) ;end end end elseif (v84>(480 -(382 + 58))) then local v170=0 -0 ;local v171;while true do if ((v170==(0 + 0)) or (31>=1398)) then v171=v83[2];v81[v171]=v81[v171](v13(v81,v171 + (664 -(174 + 489)) ,v76));break;end end else local v172=v83[2];do return v13(v81,v172,v172 + v83[(12 -7) -2 ] );end end elseif (v84<=((2032 -(830 + 1075)) -84)) then if ((3196<=4872) and (v84>(1247 -(902 + 303)))) then v81[v83[2]][v83[5 -2 ]]=v81[v83[(533 -(303 + 221)) -5 ]];else v81[v83[1 + 1 ]]();end elseif (v84<=44) then v81[v83[2]][v83[1693 -(1121 + (1838 -(231 + 1038))) ]]=v81[v83[4]];elseif ((3326==3326) and (v84==(259 -(22 + 192)))) then if ((1433<=3878) and (v81[v83[685 -(483 + 200) ]]==v81[v83[(1223 + 244) -(1404 + 59) ]])) then v75=v75 + (2 -1) ;else v75=v83[3 -0 ];end else local v264=765 -(468 + 297) ;local v265;while true do if (v264==0) then v265=v83[564 -(334 + 228) ];v81[v265]=v81[v265](v13(v81,v265 + 1 ,v83[10 -7 ]));break;end end end elseif ((v84<=(117 -66)) or (1583==1735)) then if (v84<=48) then if ((v84>(84 -37)) or (2981==2350)) then for v215=v83[2],v83[1 + 2 ] do v81[v215]=nil;end else local v177=236 -(141 + 95) ;local v178;while true do if (v177==(0 + 0)) then v178=v83[4 -2 ];v81[v178](v81[v178 + (1163 -(171 + 991)) ]);break;end end end elseif (v84<=(117 -68)) then local v179=0;local v180;local v181;while true do if ((0==v179) or (4466<=493)) then v180=v83[1 + 1 ];v181={};v179=2 -1 ;end if (1==v179) then for v338=(4 -3) + 0 , #v80 do local v339=0;local v340;while true do if (v339==(0 + 0)) then v340=v80[v338];for v379=(0 -0) -0 , #v340 do local v380=v340[v379];local v381=v380[1 + 0 ];local v382=v380[165 -(92 + 71) ];if ((v381==v81) and (v382>=v180)) then local v389=0 + 0 ;while true do if ((v389==0) or (2547<=1987)) then v181[v382]=v381[v382];v380[1 -0 ]=v181;break;end end end end break;end end end break;end end elseif (v84>(815 -(574 + (476 -285)))) then local v266=v83[2 + 0 ];local v267,v268=v74(v81[v266](v13(v81,v266 + 1 ,v83[3])));v76=(v268 + v266) -1 ;local v269=(0 + 0) -0 ;for v308=v266,v76 do v269=v269 + 1 + 0 ;v81[v308]=v267[v269];end else local v270=v83[851 -((890 -636) + 595) ];local v271={};for v311=127 -(55 + 71) , #v80 do local v312=(0 -0) -0 ;local v313;while true do if ((2961>2740) and (v312==(1790 -(573 + 1217)))) then v313=v80[v311];for v372=0 -(0 -0) , #v313 do local v373=v313[v372];local v374=v373[1 + 0 ];local v375=v373[2 -0 ];if ((3696>=3612) and (v374==v81) and (v375>=v270)) then local v385=939 -(714 + 225) ;while true do if (v385==(0 -0)) then v271[v375]=v374[v375];v373[1 -0 ]=v271;break;end end end end break;end end end end elseif (v84<=(6 + 47)) then if ((v84==(74 -22)) or (2970==1878)) then do return v81[v83[808 -(118 + 688) ]];end elseif ((v81[v83[2]]~=v81[v83[4]]) or (3693<1977)) then v75=v75 + 1 ;else v75=v83[51 -(25 + (70 -47)) ];end elseif (v84<=54) then v75=v83[1 + (1250 -(111 + 1137)) ];elseif (v84==55) then local v273=0;local v274;while true do if (v273==(1886 -(927 + 959))) then v274=v83[6 -4 ];v81[v274]=v81[v274](v13(v81,v274 + (733 -(16 + 716)) ,v83[5 -2 ]));break;end end else v81[v83[99 -(11 + 86) ]]=v83[6 -3 ]~=(285 -(175 + 110)) ;end elseif (v84<=(166 -100)) then if (v84<=(300 -239)) then if (v84<=58) then if (v84==(1853 -(503 + 1293))) then v81[v83[5 -3 ]]=v83[3 + 0 ];else v81[v83[1063 -(810 + 251) ]]=v81[v83[3 + 0 ]][v83[2 + 2 ]];end elseif ((v84<=(54 + 5)) or (930>2101)) then v81[v83[(693 -(91 + 67)) -(43 + 490) ]][v83[736 -(711 + 22) ]]=v83[(44 -29) -11 ];elseif ((4153>3086) and (v84>(919 -(240 + 619)))) then local v276=v72[v83[1 + 2 ]];local v277;local v278={};v277=v10({},{__index=function(v314,v315) local v316=v278[v315];return v316[1 -0 ][v316[1 + 1 ]];end,__newindex=function(v317,v318,v319) local v320=v278[v318];v320[1745 -(1344 + 400) ][v320[407 -(255 + 150) ]]=v319;end});for v322=1,v83[(527 -(423 + 100)) + 0 ] do local v323=0 + 0 ;local v324;while true do if ((0 -0)==v323) then v75=v75 + ((1 + 2) -2) ;v324=v71[v75];v323=1740 -((1118 -714) + 1335) ;end if (1==v323) then if ((v324[407 -(183 + 223) ]==(92 -16)) or (4654<=4050)) then v278[v322-(1 + 0) ]={v81,v324[3 + 0 ]};else v278[v322-1 ]={v63,v324[3]};end v80[ #v80 + 1 ]=v278;break;end end end v81[v83[(4 -3) + 1 ]]=v29(v276,v277,v64);else local v280=v83[2];local v281=v81[v83[3]];v81[v280 + (450 -(108 + 341)) ]=v281;v81[v280]=v281[v83[8 -4 ]];end elseif ((v84<=(29 + 34)) or (2602<1496)) then if (v84>(261 -199)) then local v189=v72[v83[1496 -(711 + 782) ]];local v190;local v191={};v190=v10({},{__index=function(v217,v218) local v219=v191[v218];return v219[1 -0 ][v219[471 -(270 + 199) ]];end,__newindex=function(v220,v221,v222) local v223=v191[v221];v223[1 + 0 ][v223[713 -(530 + 181) ]]=v222;end});for v225=1820 -(580 + 1239) ,v83[11 -7 ] do local v226=0 + 0 ;local v227;while true do if ((1 + 0)==v226) then if (v227[1 + 0 ]==(198 -(1003 -(614 + 267)))) then v191[v225-1 ]={v81,v227[1793 -(1010 + 780) ]};else v191[v225-(1 + 0) ]={v63,v227[3]};end v80[ #v80 + (1837 -(1045 + 791)) ]=v191;break;end if (v226==(0 -0)) then v75=v75 + 1 ;v227=v71[v75];v226=1;end end end v81[v83[2]]=v29(v189,v190,v64);else local v193=v83[2];v81[v193]=v81[v193](v13(v81,v193 + (1 -0) ,v76));end elseif (v84<=(569 -(92 + 259 + 154))) then local v195=1574 -(1281 + (514 -221)) ;local v196;while true do if (v195==(266 -(28 + (493 -255)))) then v196=v83[4 -2 ];v81[v196]=v81[v196](v81[v196 + (1560 -(1381 + 178)) ]);break;end end elseif (v84>(61 + 4)) then if ((v83[2]==v81[v83[4 + 0 ]]) or (1020>2288)) then v75=v75 + 1 + 0 ;else v75=v83[10 -7 ];end elseif v81[v83[2]] then v75=v75 + 1 + 0 ;else v75=v83[3];end elseif (v84<=(541 -((2193 -(1293 + 519)) + 89))) then if (v84<=(61 + 7)) then if (v84>(46 + 21)) then local v197=v83[4 -1 ];local v198=v81[v197];for v228=v197 + (1157 -(1074 + 82)) ,v83[8 -4 ] do v198=v198   .. v81[v228] ;end v81[v83[1786 -(214 + 1570) ]]=v198;else v81[v83[1457 -(990 + 465) ]]=v64[v83[2 + 1 ]];end elseif ((328==328) and (v84<=(31 + (77 -39)))) then v81[v83[2 + 0 ]]=v81[v83[11 -(20 -12) ]];elseif (v84>(1796 -(1668 + 58))) then v81[v83[2]]= not v81[v83[629 -(512 + 114) ]];else v81[v83[2]]={};end elseif ((1511<3808) and (v84<=73)) then if (v84>(187 -115)) then local v204=0 -0 ;local v205;while true do if (v204==(0 -(0 -0))) then v205=v83[2];v81[v205](v81[v205 + 1 + 0 ]);break;end end else local v206=v83[1 + 1 ];local v207={v81[v206](v13(v81,v206 + 1 ,v76))};local v208=0;for v229=v206,v83[(56 -43) -9 ] do local v230=1994 -(109 + 1885) ;while true do if (v230==(1469 -(1269 + 200))) then v208=v208 + 1 ;v81[v229]=v207[v208];break;end end end end elseif (v84<=(141 -67)) then if ((v81[v83[817 -(98 + 717) ]]==v83[830 -((1889 -1087) + 13 + 11) ]) or (2510>4919)) then v75=v75 + (1 -0) ;else v75=v83[3 -0 ];end elseif (v84>75) then v81[v83[1 + 1 ]]=v81[v83[1 + 2 ]];else v81[v83[2 + 0 ]]=v83[1 + 2 ]~=(0 + 0) ;end v75=v75 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
